# Building Your Specialized AI Assistant

## Project Overview

In this project, you will create a specialized AI assistant using Python and the Gemini AI API. Your assistant will focus on a specific area of expertise and incorporate features such as conversation storage, topic classification, and summarization.

## Choosing Your Assistant's Specialty

Select one of the following specialties for your AI assistant, or propose your own (subject to instructor approval):

1. Fitness Coach
2. Creative Writing Mentor
3. Personal Finance Advisor
4. Cooking Companion
5. Travel Planner
6. Language Learning Partner
7. Mindfulness and Meditation Guide
8. DIY Project Helper
9. Career Development Coach
10. Environmental Sustainability Advisor
11. Tech Support Assistant
12. Music Theory Tutor
13. Gardening Guide
14. Art History Educator
15. Productivity Coach
16. Wine Suggester

## Project Requirements

Your AI assistant should include the following features:

1. **Basic Conversation**: Implement a simple chat interface where users can interact with your assistant.

2. **Specialized Knowledge**: Create system instructions and few-shot examples tailored to your chosen specialty.

3. **Topic Classification**: Implement a system to classify user inputs into relevant topics within your specialty.

4. **Conversation Storage**: Store the entire conversation history during each session.

5. **Conversation Summarization**: Provide a summary of the conversation when the user ends the session.

6. **Persistent Storage**: Save conversations to a file for future reference.

7. **Historical Query**: Allow users to ask about previous conversations.

## Project Stages

### Stage 1: Basic Assistant Setup
- Set up the Gemini AI API
- Create system instructions and few-shot examples
- Implement basic conversation flow

### Stage 2: Topic Classification
- Define relevant topics and keywords for your specialty
- Implement a function to classify user inputs

### Stage 3: Conversation Management
- Implement conversation storage
- Create a summarization function
- Add end-of-conversation summary feature

### Stage 4: Advanced Features
- Implement persistent storage (saving to file)
- Add functionality to query previous conversations
- (Optional) Implement mid-conversation summarization or custom summary types

## Example Implementation: Astronomy Guide

Let's consider an example of an Astronomy Guide assistant, which isn't in the suggested list:

```python
import os
import google.generativeai as genai

API_KEY = os.environ.get("GEMINI_API_KEY")
genai.configure(api_key=API_KEY)
model = genai.GenerativeModel('gemini-pro')

SYSTEM_INSTRUCTIONS = """
You are an Astronomy Guide assistant. Provide information about celestial bodies, 
astronomical phenomena, and space exploration. Explain concepts in a way that's 
accessible to amateur stargazers but can also cater to more advanced enthusiasts.
"""

FEW_SHOT_EXAMPLES = """
Human: What's the difference between a planet and a dwarf planet?
Assistant: Great question! The main differences between planets and dwarf planets are:

1. Orbital Dominance: Planets have cleared their orbital paths of other objects, while dwarf planets haven't.
2. Size: Planets are generally larger, though size alone doesn't determine classification.
3. Shape: Planets are nearly round due to their own gravity, as are dwarf planets.

For example, Pluto is classified as a dwarf planet because it hasn't cleared its orbit of other Kuiper Belt objects.

Would you like to know more about specific planets or dwarf planets in our solar system?